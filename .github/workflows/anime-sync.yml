name: Anime Sync

on:
  schedule:
    # Runs every day at 3am UTC
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  sync_custom_formats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies and yq
        run: |
          sudo apt-get update && sudo apt-get install -y curl git wget
          mkdir -p $HOME/bin
          YQ_VERSION=v4.45.1
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O $HOME/bin/yq
          chmod +x $HOME/bin/yq
          export PATH=$HOME/bin:$PATH
          yq --version

      - name: Ensure directories exist
        run: |
          mkdir -p profiles custom_formats regex_patterns

      - name: Download latest Anime 1080p.yml from upstream
        run: |
          UPSTREAM_URL="https://raw.githubusercontent.com/Dumpstarr/Dumpstarr/stable/profiles/Anime%201080p.yml"
          curl -fsSL "$UPSTREAM_URL" -o profiles/Anime\ 1080p.yml

      - name: Parse custom formats from Anime 1080p.yml
        id: parse_formats
        run: |
          # Try different keys depending on file structure
          FORMATS=$(yq e '.custom_formats[].name' profiles/Anime\ 1080p.yml 2>/dev/null || true)
          if [ -z "$FORMATS" ] || [ "$FORMATS" = "null" ]; then
              FORMATS=$(yq e '.custom_formats_sonarr[].name' profiles/Anime\ 1080p.yml 2>/dev/null || true)
          fi
          if [ -z "$FORMATS" ] || [ "$FORMATS" = "null" ]; then
              FORMATS=$(yq e '.custom_formats_radarr[].name' profiles/Anime\ 1080p.yml 2>/dev/null || true)
          fi

          echo "Detected formats:"
          echo "$FORMATS"
          FORMATS_OUTPUT=$(echo "$FORMATS" | paste -sd "," -)
          echo "formats=$FORMATS_OUTPUT" >> $GITHUB_OUTPUT


      - name: Download required custom formats
        run: |
          BASE_URL="https://raw.githubusercontent.com/Dumpstarr/Dumpstarr/stable/custom_formats"
          echo "${{ steps.parse_formats.outputs.formats }}" | tr ',' '\n' | while read -r FORMAT; do
              FILE_NAME="$FORMAT.yml"
              # Use %20 only in URL for spaces
              URL="$BASE_URL/$(echo "$FILE_NAME" | sed 's/ /%20/g')"
              echo "Downloading $FILE_NAME"
              curl -fsSL "$URL" -o "custom_formats/$FILE_NAME" || echo "Warning: $FILE_NAME not found"
          done

      - name: Download required regex patterns
        run: |
          mkdir -p regex_patterns
          BASE_URL="https://raw.githubusercontent.com/Dumpstarr/Dumpstarr/stable/regex_patterns"

          # Extract only condition names that have a "pattern" field
          mapfile -t REGEX_PATTERNS < <(
            for FILE in custom_formats/*.yml; do
              yq e '.conditions[] | select(has("pattern")) | .name' "$FILE"
            done | sort -u
          )

          # Download each regex pattern
          for PATTERN in "${REGEX_PATTERNS[@]}"; do
              SAFE_PATTERN=$(echo "$PATTERN" | sed 's/ /%20/g')
              echo "Downloading regex pattern $PATTERN"
              curl -fsSL "$BASE_URL/$SAFE_PATTERN.yml" -o "regex_patterns/$PATTERN.yml" || echo "Warning: $PATTERN.yml not found"
          done

      - name: Commit and push changes
        run: |
          git add profiles/Anime\ 1080p.yml custom_formats/*.yml regex_patterns/*.yml
          if ! git diff --cached --quiet; then
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git commit -m "Sync Anime 1080p.yml, custom_formats, and regex_patterns"
              git push
          else
              echo "No changes to commit"
          fi
